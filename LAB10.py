{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Welcome to Student Management System\n",
      "1. Admin\n",
      "2. Student\n",
      "3. Exit\n",
      "\n",
      "Admin Menu:\n",
      "1. Add Student\n",
      "2. Add Marks\n",
      "3. Display Student Details\n",
      "4. Exit\n",
      "Invalid choice. Please try again.\n",
      "\n",
      "Admin Menu:\n",
      "1. Add Student\n",
      "2. Add Marks\n",
      "3. Display Student Details\n",
      "4. Exit\n",
      "Student aleena added successfully!\n",
      "\n",
      "Admin Menu:\n",
      "1. Add Student\n",
      "2. Add Marks\n",
      "3. Display Student Details\n",
      "4. Exit\n",
      "Name: aleena\n",
      "Roll Number: 45\n",
      "Marks:\n",
      "\n",
      "Admin Menu:\n",
      "1. Add Student\n",
      "2. Add Marks\n",
      "3. Display Student Details\n",
      "4. Exit\n",
      "\n",
      "Welcome to Student Management System\n",
      "1. Admin\n",
      "2. Student\n",
      "3. Exit\n",
      "Invalid user type. Please try again.\n",
      "\n",
      "Welcome to Student Management System\n",
      "1. Admin\n",
      "2. Student\n",
      "3. Exit\n",
      "Invalid user type. Please try again.\n",
      "\n",
      "Welcome to Student Management System\n",
      "1. Admin\n",
      "2. Student\n",
      "3. Exit\n",
      "Invalid user type. Please try again.\n",
      "\n",
      "Welcome to Student Management System\n",
      "1. Admin\n",
      "2. Student\n",
      "3. Exit\n",
      "Invalid user type. Please try again.\n",
      "\n",
      "Welcome to Student Management System\n",
      "1. Admin\n",
      "2. Student\n",
      "3. Exit\n",
      "Invalid user type. Please try again.\n",
      "\n",
      "Welcome to Student Management System\n",
      "1. Admin\n",
      "2. Student\n",
      "3. Exit\n",
      "Invalid user type. Please try again.\n",
      "\n",
      "Welcome to Student Management System\n",
      "1. Admin\n",
      "2. Student\n",
      "3. Exit\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "Interrupted by user",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[1;32mg:\\MSDS SEM1\\MScDSB-MDS171-23122104-AleenaMariya\\LAB10.ipynb Cell 1\u001b[0m line \u001b[0;36m9\n\u001b[0;32m     <a href='vscode-notebook-cell:/g%3A/MSDS%20SEM1/MScDSB-MDS171-23122104-AleenaMariya/LAB10.ipynb#W0sZmlsZQ%3D%3D?line=92'>93</a>\u001b[0m \u001b[39mprint\u001b[39m(\u001b[39m\"\u001b[39m\u001b[39m2. Student\u001b[39m\u001b[39m\"\u001b[39m)\n\u001b[0;32m     <a href='vscode-notebook-cell:/g%3A/MSDS%20SEM1/MScDSB-MDS171-23122104-AleenaMariya/LAB10.ipynb#W0sZmlsZQ%3D%3D?line=93'>94</a>\u001b[0m \u001b[39mprint\u001b[39m(\u001b[39m\"\u001b[39m\u001b[39m3. Exit\u001b[39m\u001b[39m\"\u001b[39m)\n\u001b[1;32m---> <a href='vscode-notebook-cell:/g%3A/MSDS%20SEM1/MScDSB-MDS171-23122104-AleenaMariya/LAB10.ipynb#W0sZmlsZQ%3D%3D?line=94'>95</a>\u001b[0m user_type \u001b[39m=\u001b[39m \u001b[39minput\u001b[39;49m(\u001b[39m\"\u001b[39;49m\u001b[39mEnter user type: \u001b[39;49m\u001b[39m\"\u001b[39;49m)\n\u001b[0;32m     <a href='vscode-notebook-cell:/g%3A/MSDS%20SEM1/MScDSB-MDS171-23122104-AleenaMariya/LAB10.ipynb#W0sZmlsZQ%3D%3D?line=96'>97</a>\u001b[0m \u001b[39mif\u001b[39;00m user_type \u001b[39m==\u001b[39m \u001b[39m'\u001b[39m\u001b[39m1\u001b[39m\u001b[39m'\u001b[39m:\n\u001b[0;32m     <a href='vscode-notebook-cell:/g%3A/MSDS%20SEM1/MScDSB-MDS171-23122104-AleenaMariya/LAB10.ipynb#W0sZmlsZQ%3D%3D?line=97'>98</a>\u001b[0m     \u001b[39mwhile\u001b[39;00m \u001b[39mTrue\u001b[39;00m:\n",
      "File \u001b[1;32mc:\\Users\\id\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1177\u001b[0m, in \u001b[0;36mKernel.raw_input\u001b[1;34m(self, prompt)\u001b[0m\n\u001b[0;32m   1173\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_allow_stdin:\n\u001b[0;32m   1174\u001b[0m     \u001b[39mraise\u001b[39;00m StdinNotImplementedError(\n\u001b[0;32m   1175\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mraw_input was called, but this frontend does not support input requests.\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[0;32m   1176\u001b[0m     )\n\u001b[1;32m-> 1177\u001b[0m \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_input_request(\n\u001b[0;32m   1178\u001b[0m     \u001b[39mstr\u001b[39;49m(prompt),\n\u001b[0;32m   1179\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_parent_ident[\u001b[39m\"\u001b[39;49m\u001b[39mshell\u001b[39;49m\u001b[39m\"\u001b[39;49m],\n\u001b[0;32m   1180\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mget_parent(\u001b[39m\"\u001b[39;49m\u001b[39mshell\u001b[39;49m\u001b[39m\"\u001b[39;49m),\n\u001b[0;32m   1181\u001b[0m     password\u001b[39m=\u001b[39;49m\u001b[39mFalse\u001b[39;49;00m,\n\u001b[0;32m   1182\u001b[0m )\n",
      "File \u001b[1;32mc:\\Users\\id\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\ipykernel\\kernelbase.py:1219\u001b[0m, in \u001b[0;36mKernel._input_request\u001b[1;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[0;32m   1216\u001b[0m             \u001b[39mbreak\u001b[39;00m\n\u001b[0;32m   1217\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mKeyboardInterrupt\u001b[39;00m:\n\u001b[0;32m   1218\u001b[0m     \u001b[39m# re-raise KeyboardInterrupt, to truncate traceback\u001b[39;00m\n\u001b[1;32m-> 1219\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mKeyboardInterrupt\u001b[39;00m(\u001b[39m\"\u001b[39m\u001b[39mInterrupted by user\u001b[39m\u001b[39m\"\u001b[39m) \u001b[39mfrom\u001b[39;00m \u001b[39mNone\u001b[39m\n\u001b[0;32m   1220\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mException\u001b[39;00m:\n\u001b[0;32m   1221\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mlog\u001b[39m.\u001b[39mwarning(\u001b[39m\"\u001b[39m\u001b[39mInvalid Message:\u001b[39m\u001b[39m\"\u001b[39m, exc_info\u001b[39m=\u001b[39m\u001b[39mTrue\u001b[39;00m)\n",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m: Interrupted by user"
     ]
    }
   ],
   "source": [
    "class Student:\n",
    "    def __init__(self, name, roll_number):\n",
    "        self.name = name\n",
    "        self.roll_number = roll_number\n",
    "        self.marks = {}\n",
    "\n",
    "    def add_marks(self, subject, marks):\n",
    "        self.marks[subject] = marks\n",
    "\n",
    "    def get_average_marks(self):\n",
    "        if not self.marks:\n",
    "            return None\n",
    "        total_marks = sum(self.marks.values())\n",
    "        return total_marks / len(self.marks)\n",
    "\n",
    "    def display_details(self):\n",
    "        print(f\"Name: {self.name}\")\n",
    "        print(f\"Roll Number: {self.roll_number}\")\n",
    "        print(\"Marks:\")\n",
    "        for subject, marks in self.marks.items():\n",
    "            print(f\"{subject}: {marks}\")\n",
    "\n",
    "def admin_menu():\n",
    "    print(\"\\nAdmin Menu:\")\n",
    "    print(\"1. Add Student\")\n",
    "    print(\"2. Add Marks\")\n",
    "    print(\"3. Display Student Details\")\n",
    "    print(\"4. Exit\")\n",
    "    choice = input(\"Enter your choice: \")\n",
    "    return choice\n",
    "\n",
    "def student_menu():\n",
    "    print(\"\\nStudent Menu:\")\n",
    "    print(\"1. Display My Details\")\n",
    "    print(\"2. Display My Average Marks\")\n",
    "    print(\"3. Exit\")\n",
    "    choice = input(\"Enter your choice: \")\n",
    "    return choice\n",
    "\n",
    "students = []\n",
    "\n",
    "def add_student():\n",
    "    name = input(\"Enter student name: \")\n",
    "    roll_number = input(\"Enter roll number: \")\n",
    "    new_student = Student(name, roll_number)\n",
    "    students.append(new_student)\n",
    "    print(f\"Student {name} added successfully!\")\n",
    "\n",
    "def add_marks():\n",
    "    roll_number = input(\"Enter student roll number: \")\n",
    "    for student in students:\n",
    "        if student.roll_number == roll_number:\n",
    "            subject = input(\"Enter subject: \")\n",
    "            marks = float(input(\"Enter marks: \"))\n",
    "            student.add_marks(subject, marks)\n",
    "            print(f\"Marks added for {subject}\")\n",
    "            break\n",
    "    else:\n",
    "        print(f\"Student with roll number {roll_number} not found.\")\n",
    "\n",
    "def display_student_details():\n",
    "    roll_number = input(\"Enter student roll number: \")\n",
    "    for student in students:\n",
    "        if student.roll_number == roll_number:\n",
    "            student.display_details()\n",
    "            break\n",
    "    else:\n",
    "        print(f\"Student with roll number {roll_number} not found.\")\n",
    "\n",
    "def display_my_details(roll_number):\n",
    "    for student in students:\n",
    "        if student.roll_number == roll_number:\n",
    "            student.display_details()\n",
    "            break\n",
    "    else:\n",
    "        print(f\"Student with roll number {roll_number} not found.\")\n",
    "\n",
    "def display_my_average_marks(roll_number):\n",
    "    for student in students:\n",
    "        if student.roll_number == roll_number:\n",
    "            average_marks = student.get_average_marks()\n",
    "            if average_marks is not None:\n",
    "                print(f\"Average Marks: {average_marks}\")\n",
    "            else:\n",
    "                print(\"No marks available.\")\n",
    "            break\n",
    "    else:\n",
    "        print(f\"Student with roll number {roll_number} not found.\")\n",
    "\n",
    "while True:\n",
    "    print(\"\\nWelcome to Student Management System\")\n",
    "    print(\"1. Admin\")\n",
    "    print(\"2. Student\")\n",
    "    print(\"3. Exit\")\n",
    "    user_type = input(\"Enter user type: \")\n",
    "\n",
    "    if user_type == '1':\n",
    "        while True:\n",
    "            choice = admin_menu()\n",
    "            if choice == '1':\n",
    "                add_student()\n",
    "            elif choice == '2':\n",
    "                add_marks()\n",
    "            elif choice == '3':\n",
    "                display_student_details()\n",
    "            elif choice == '4':\n",
    "                break\n",
    "            else:\n",
    "                print(\"Invalid choice. Please try again.\")\n",
    "\n",
    "    elif user_type == '2':\n",
    "        roll_number = input(\"Enter your roll number: \")\n",
    "        while True:\n",
    "            choice = student_menu()\n",
    "            if choice == '1':\n",
    "                display_my_details(roll_number)\n",
    "            elif choice == '2':\n",
    "                display_my_average_marks(roll_number)\n",
    "            elif choice == '3':\n",
    "                break\n",
    "            else:\n",
    "                print(\"Invalid choice. Please try again.\")\n",
    "\n",
    "    elif user_type == '3':\n",
    "        break\n",
    "\n",
    "    else:\n",
    "        print(\"Invalid user type. Please try again.\")\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
